# This is a basic workflow to help you get started with Actions

name: CI
run-name: ${{ inputs.environment }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "r[0-9][0-9].[0-9][0-9]",  "r[0-9][0-9].[0-9]"]
  #pull_request:
  #  branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: boolean
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set outputs
        id: aws-vars
        env:
          AWS: '{"sample":{"cluster_name":"sample","account_id":"12345"},"sample1":{"cluster_name":"sample1","account_id":"54321"}}'
        run: |
          echo "::add-mask::$AWS"
          echo aws=$AWS >> $GITHUB_OUTPUT
        
      # - run: |
      #    [[ '${{ fromJson(steps.aws-vars.outputs.aws).s }}' =~ .+ ]]

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo ${{ fromJson(steps.aws-vars.outputs.aws).sample.cluster_name }}

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set tag variable
        id: vars
        run: |
          echo $(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest | jq ".tag_name")
            
      - id: var
        run: echo tag=sample >> $GITHUB_OUTPUT

      - name: Install Terragrunt CLI
        run: |
          echo ${{ steps.var.outputs.tag }}
          curl -s -L https://github.com/gruntwork-io/terragrunt/releases/download/${{ steps.vars.outputs.tag }}/terragrunt_linux_amd64 -o terragrunt
          chmod u+x terragrunt
          echo $(pwd) >> $GITHUB_PATH
          
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: terragrunt -v
